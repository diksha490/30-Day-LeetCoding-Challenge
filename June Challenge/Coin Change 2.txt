You are given coins of different denominations and a total amount of money. Write a function to compute the 
number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.

Example 1:

Input: amount = 5, coins = [1, 2, 5]
Output: 4
Explanation: there are four ways to make up the amount:
5=5
5=2+2+1
5=2+1+1+1
5=1+1+1+1+1

Example 2:
Input: amount = 3, coins = [2]
Output: 0
Explanation: the amount of 3 cannot be made up just with coins of 2.

Example 3:
Input: amount = 10, coins = [10] 
Output: 1

SOLUTION:-

class Solution {
    public int change(int amount, int[] coins)
    {
        int n=amount;
        int m=coins.length;
        int table[][]=new int[m+1][n+1];
        int i,j;
       
        for(i=0;i<=m;i++)
            table[i][0]=1;
        for(i=1;i<=n;i++)
            table[0][i]=0;

        
        for(i=1;i<=m;i++)
        {
            for(j=1;j<=n;j++)
            {
                if(coins[i-1]<=j)
                    table[i][j]=table[i][j-coins[i-1]]+table[i-1][j];
                else
                    table[i][j]=table[i-1][j];
            }
        }
        return table[m][n];
    }
}