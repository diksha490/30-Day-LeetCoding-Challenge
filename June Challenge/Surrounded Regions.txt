Given a 2D board containing 'X' and 'O' (the letter O), capture all regions surrounded by 'X'.

A region is captured by flipping all 'O's into 'X's in that surrounded region.

Example:

X X X X
X O O X
X X O X
X O X X
After running your function, the board should be:

X X X X
X X X X
X X X X
X O X X

SOLUTION:-
class Solution {
    public void solve(char[][] board) {
      if(board.length==0)
        return;
      int m=board.length;
      int n=board[0].length;
      boolean visit[][]=new boolean[m][n];
      for(int i=0;i<n;i++)
      {
        dfs(0,i,board,visit);
        dfs(m-1,i,board,visit);
      }
      for(int i=0;i<m;i++)
      {
        dfs(i,0,board,visit);
        dfs(i,n-1,board,visit);
      }
      
      for(int i=0;i<m;i++)
      {
        for(int j=0;j<n;j++)
        {
          if(board[i][j]=='O')
            board[i][j]='X';
          else if(board[i][j]=='#')
            board[i][j]='O';
        }
      }
        
    }
   public void dfs(int row,int col,char board[][],boolean visit[][])
   {
     if(row>=0 && row<board.length && col>=0 && col<board[0].length && !visit[row][col] && board[row][col]=='O')
     {
     board[row][col]='#';
     visit[row][col]=true;
     dfs(row+1,col,board,visit);
     dfs(row,col+1,board,visit);
     dfs(row-1,col,board,visit);
     dfs(row,col-1,board,visit);
     }
     }
  
}