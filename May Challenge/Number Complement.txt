Given a positive integer num, output its complement number. The complement strategy is to flip the bits of its binary representation.

Example 1:
Input: num = 5
Output: 2
Explanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.

Example 2:
Input: num = 1
Output: 0
Explanation: The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.

SOLUTION :-
class Solution {
    public int findComplement(int num) {
         if(num==0)
            return 1;
        int temp=num;
        for(int i=1;num!=0;i=i*2)
        {
            temp=temp^i;
            num=num>>>1;
        }
       return temp; 
        
    }
}
 