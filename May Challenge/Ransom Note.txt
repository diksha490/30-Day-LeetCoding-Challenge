Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true 
if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.
Example 1:
Input: ransomNote = "a", magazine = "b"
Output: false

Example 2:
Input: ransomNote = "aa", magazine = "ab"
Output: false

Example 3:
Input: ransomNote = "aa", magazine = "aab"
Output: true
 
Constraints:
You may assume that both strings contain only lowercase letters.

SOLUTION:-

class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        HashMap<Character,Integer> map=new HashMap<Character,Integer>();
        char[] r=ransomNote.toCharArray();
        char[] m=magazine.toCharArray();
        for(int i=0;i<m.length;i++)
        {
            if(!map.containsKey(m[i]))
                map.put(m[i],1);
            else
            {
                int val=map.get(m[i]);
                map.put(m[i],val+1);
            }
        }
        
        for(int i=0;i<r.length;i++)
        {
            if(!map.containsKey(r[i])|| map.get(r[i])==0)
                return false;
            map.put(r[i],map.get(r[i])-1);
            
        }
        return true;
    }
}