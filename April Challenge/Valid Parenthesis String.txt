Given a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the 
validity of a string by these rules:

Any left parenthesis '(' must have a corresponding right parenthesis ')'.
Any right parenthesis ')' must have a corresponding left parenthesis '('.
Left parenthesis '(' must go before the corresponding right parenthesis ')'.
'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string.
An empty string is also valid.

Example 1:
Input: "()"
Output: True

Example 2:
Input: "(*)"
Output: True

Example 3:
Input: "(*))"
Output: True

SOLUTION:-

class Solution {
    public boolean checkValidString(String s) {
        if(s.length()==0)
            return true;
        int n=s.length()-1;
        int opencount=0;
        int closecount=0;
        
        for(int i=0;i<=n;i++)
        {
            if(s.charAt(i)=='*' || s.charAt(i)=='(')
                opencount++;
            else 
                opencount--;
            if(s.charAt(n-i)=='*' || s.charAt(n-i)==')')
                closecount++;
            else
                closecount--;
            if(opencount<0 || closecount<0)
                return false;
        }
        return true;
    }
}