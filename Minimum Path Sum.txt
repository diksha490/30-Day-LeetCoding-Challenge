Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers 
along its path.

Note: You can only move either down or right at any point in time.

Example:

Input:
[
  [1,3,1],
  [1,5,1],
  [4,2,1]
]
Output: 7
Explanation: Because the path 1→3→1→1→1 minimizes the sum.

SOLUTION :-

class Solution {
    public int minPathSum(int[][] grid) {
        int i,j;
        int m=grid.length;
        int n=grid[0].length;
        int minpath[][]=new int[m][n];
        minpath[0][0]=grid[0][0];
        
        for(i=1;i<m;i++)
            minpath[i][0]=minpath[i-1][0]+grid[i][0];
        
        for(j=1;j<n;j++)
            minpath[0][j]=minpath[0][j-1]+grid[0][j];
        
        for(i=1;i<m;i++)
        {
            for(j=1;j<n;j++)
            {
                minpath[i][j]=Math.min(minpath[i-1][j],minpath[i][j-1])+grid[i][j];
            }
        }
        return minpath[m-1][n-1];
        
    }
}