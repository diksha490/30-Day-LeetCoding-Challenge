Given a 2D binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.

Example:

Input: 

1 0 1 0 0
1 0 1 1 1
1 1 1 1 1
1 0 0 1 0

Output: 4

SOLUTION:-

class Solution {
    public int maximalSquare(char[][] matrix) {
        if(matrix.length==0)
            return 0;
        int m=matrix.length;
        int n=matrix[0].length;
        int dp[][]=new int[m][n];
        
        for(int i=0;i<m;i++)
            dp[i][0]=matrix[i][0]-'0';
        for(int i=0;i<n;i++)
            dp[0][i]=matrix[0][i]-'0';
        
        for(int i=1;i<m;i++)
        {
            for(int j=1;j<n;j++)
            {
                if(matrix[i][j]=='1')
                    dp[i][j]=Math.min(dp[i-1][j-1],Math.min(dp[i-1][j],dp[i][j-1]))+1;
                else
                    dp[i][j]=0;
            }
        }
        int max=dp[0][0];
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                
                if(max<dp[i][j])
                    max=dp[i][j];
            }
        }
        int result=(int)max;
        return result*result;
    }
}