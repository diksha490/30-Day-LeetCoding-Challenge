Given two strings S and T, return if they are equal when both are typed into empty text editors. # means a backspace character.

Note that after backspacing an empty text, the text will continue empty.

Example 1:

Input: S = "ab#c", T = "ad#c"
Output: true
Explanation: Both S and T become "ac".
Example 2:

Input: S = "ab##", T = "c#d#"
Output: true
Explanation: Both S and T become "".
Example 3:

Input: S = "a##c", T = "#a#c"
Output: true
Explanation: Both S and T become "c".
Example 4:

Input: S = "a#c", T = "b"
Output: false
Explanation: S becomes "c" while T becomes "b".

SOLUTION:-

class Solution {
    public boolean backspaceCompare(String S, String T) {
        
        Stack<Character> stck1=new Stack<Character>();
        Stack<Character> stck2=new Stack<Character>();
        
        for(int i=0;i<S.length();i++)
        {
            char ch=S.charAt(i);
            if(stck1.isEmpty())
            {
                if(ch!='#')
                {   
                  stck1.push(ch);
                  continue;
                }
                else 
                    continue;
            }
            if(ch=='#')
                 stck1.pop();
            else
                stck1.push(ch);
                
        }
         for(int j=0;j<T.length();j++)
        {
            char ch=T.charAt(j);
            if(stck2.isEmpty())
            {
                if(ch!='#')
                {   
                  stck2.push(ch);
                  continue;
                }
                else 
                    continue;
            }
            if(ch=='#')
                 stck2.pop();
            else
                stck2.push(ch);
                
        }
        
        while(!stck1.isEmpty()&&!stck2.isEmpty())
        {
            if(stck1.pop()!=stck2.pop())
                 return false;
        }
        return (stck1.isEmpty() == stck2.isEmpty());
        
    }
}